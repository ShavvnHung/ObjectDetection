2021-11-30 03:53:48,241 - mmdet - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.6.9 (default, Jan 26 2021, 15:33:00) [GCC 8.4.0]
CUDA available: True
GPU 0,1: NVIDIA GeForce RTX 3090
CUDA_HOME: /usr/local/cuda
NVCC: Build cuda_11.5.r11.5/compiler.30411180_0
GCC: gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0
PyTorch: 1.7.0+cu110
PyTorch compiling details: PyTorch built with:
  - GCC 7.3
  - C++ Version: 201402
  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v1.6.0 (Git Hash 5ef631a030a6f73131c77892041042805a06064f)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.0
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80
  - CuDNN 8.0.4
  - Magma 2.5.2
  - Build settings: BLAS=MKL, BUILD_TYPE=Release, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, USE_CUDA=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, 

TorchVision: 0.8.1+cu110
OpenCV: 4.5.4-dev
MMCV: 1.3.17
MMCV Compiler: GCC 7.5
MMCV CUDA Compiler: 11.5
MMDetection: 2.18.1+a7a16af
------------------------------------------------------------

2021-11-30 03:53:49,100 - mmdet - INFO - Distributed training: False
2021-11-30 03:53:49,964 - mmdet - INFO - Config:
checkpoint_config = dict(interval=50)
log_config = dict(interval=50, hooks=[dict(type='TextLoggerHook')])
custom_hooks = [dict(type='NumClassCheckHook')]
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = 'work_dir/epoch_250.pth'
workflow = [('train', 1)]
model = dict(
    type='YOLOV3',
    backbone=dict(
        type='Darknet',
        depth=53,
        out_indices=(3, 4, 5),
        init_cfg=dict(type='Pretrained', checkpoint='open-mmlab://darknet53')),
    neck=dict(
        type='YOLOV3Neck',
        num_scales=3,
        in_channels=[1024, 512, 256],
        out_channels=[512, 256, 128]),
    bbox_head=dict(
        type='YOLOV3Head',
        num_classes=9,
        in_channels=[512, 256, 128],
        out_channels=[1024, 512, 256],
        anchor_generator=dict(
            type='YOLOAnchorGenerator',
            base_sizes=[[(116, 90), (156, 198), (373, 326)],
                        [(30, 61), (62, 45), (59, 119)],
                        [(10, 13), (16, 30), (33, 23)]],
            strides=[32, 16, 8]),
        bbox_coder=dict(type='YOLOBBoxCoder'),
        featmap_strides=[32, 16, 8],
        loss_cls=dict(
            type='CrossEntropyLoss',
            use_sigmoid=True,
            loss_weight=1.0,
            reduction='sum'),
        loss_conf=dict(
            type='CrossEntropyLoss',
            use_sigmoid=True,
            loss_weight=1.0,
            reduction='sum'),
        loss_xy=dict(
            type='CrossEntropyLoss',
            use_sigmoid=True,
            loss_weight=2.0,
            reduction='sum'),
        loss_wh=dict(type='MSELoss', loss_weight=2.0, reduction='sum')),
    train_cfg=dict(
        assigner=dict(
            type='GridAssigner',
            pos_iou_thr=0.5,
            neg_iou_thr=0.5,
            min_pos_iou=0)),
    test_cfg=dict(
        nms_pre=1000,
        min_bbox_size=0,
        score_thr=0.05,
        conf_thr=0.005,
        nms=dict(type='nms', iou_threshold=0.45),
        max_per_img=100))
dataset_type = 'CocoDataset'
data_root = 'data/coco/'
img_norm_cfg = dict(mean=[0, 0, 0], std=[255.0, 255.0, 255.0], to_rgb=True)
train_pipeline = [
    dict(type='LoadImageFromFile', to_float32=True),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(type='PhotoMetricDistortion'),
    dict(type='Expand', mean=[0, 0, 0], to_rgb=True, ratio_range=(1, 2)),
    dict(
        type='MinIoURandomCrop',
        min_ious=(0.4, 0.5, 0.6, 0.7, 0.8, 0.9),
        min_crop_size=0.3),
    dict(type='Resize', img_scale=[(320, 320), (608, 608)], keep_ratio=True),
    dict(type='RandomFlip', flip_ratio=0.5),
    dict(
        type='Normalize',
        mean=[0, 0, 0],
        std=[255.0, 255.0, 255.0],
        to_rgb=True),
    dict(type='Pad', size_divisor=32),
    dict(type='DefaultFormatBundle'),
    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
]
test_pipeline = [
    dict(type='LoadImageFromFile'),
    dict(
        type='MultiScaleFlipAug',
        img_scale=(608, 608),
        flip=False,
        transforms=[
            dict(type='Resize', keep_ratio=True),
            dict(type='RandomFlip'),
            dict(
                type='Normalize',
                mean=[0, 0, 0],
                std=[255.0, 255.0, 255.0],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ])
]
data = dict(
    samples_per_gpu=8,
    workers_per_gpu=4,
    train=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/train.json',
        img_prefix='data/coco/image/',
        pipeline=[
            dict(type='LoadImageFromFile', to_float32=True),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(type='PhotoMetricDistortion'),
            dict(
                type='Expand', mean=[0, 0, 0], to_rgb=True,
                ratio_range=(1, 2)),
            dict(
                type='MinIoURandomCrop',
                min_ious=(0.4, 0.5, 0.6, 0.7, 0.8, 0.9),
                min_crop_size=0.3),
            dict(
                type='Resize',
                img_scale=[(320, 320), (608, 608)],
                keep_ratio=True),
            dict(type='RandomFlip', flip_ratio=0.5),
            dict(
                type='Normalize',
                mean=[0, 0, 0],
                std=[255.0, 255.0, 255.0],
                to_rgb=True),
            dict(type='Pad', size_divisor=32),
            dict(type='DefaultFormatBundle'),
            dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels'])
        ]),
    val=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/val.json',
        img_prefix='data/coco/image/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(608, 608),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[0, 0, 0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]),
    test=dict(
        type='CocoDataset',
        ann_file='data/coco/annotations/test.json',
        img_prefix='data/coco/image/',
        pipeline=[
            dict(type='LoadImageFromFile'),
            dict(
                type='MultiScaleFlipAug',
                img_scale=(608, 608),
                flip=False,
                transforms=[
                    dict(type='Resize', keep_ratio=True),
                    dict(type='RandomFlip'),
                    dict(
                        type='Normalize',
                        mean=[0, 0, 0],
                        std=[255.0, 255.0, 255.0],
                        to_rgb=True),
                    dict(type='Pad', size_divisor=32),
                    dict(type='ImageToTensor', keys=['img']),
                    dict(type='Collect', keys=['img'])
                ])
        ]))
optimizer = dict(type='SGD', lr=0.000125, momentum=0.9, weight_decay=0.0005)
optimizer_config = dict(grad_clip=dict(max_norm=35, norm_type=2))
lr_config = dict(
    policy='step',
    warmup='linear',
    warmup_iters=2000,
    warmup_ratio=0.1,
    step=[218, 246])
runner = dict(type='EpochBasedRunner', max_epochs=273)
evaluation = dict(interval=1, metric=['bbox'])
work_dir = 'work_dir'
gpu_ids = range(0, 1)

2021-11-30 03:53:49,965 - mmdet - INFO - Set random seed to 1307084632, deterministic: False
2021-11-30 03:53:50,878 - mmdet - INFO - initialize Darknet with init_cfg {'type': 'Pretrained', 'checkpoint': 'open-mmlab://darknet53'}
Name of parameter - Initialization information

backbone.conv1.conv.weight - torch.Size([32, 3, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.conv.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.conv.weight - torch.Size([32, 64, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.bn.weight - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv1.bn.bias - torch.Size([32]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.conv.weight - torch.Size([64, 32, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block1.res0.conv2.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.conv.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res0.conv2.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.conv.weight - torch.Size([64, 128, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.bn.weight - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv1.bn.bias - torch.Size([64]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.conv.weight - torch.Size([128, 64, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block2.res1.conv2.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.conv.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res0.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res1.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res2.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res3.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res4.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res5.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res6.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.bn.weight - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv1.bn.bias - torch.Size([128]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block3.res7.conv2.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.conv.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res0.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res1.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res2.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res3.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res4.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res5.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res6.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.bn.weight - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv1.bn.bias - torch.Size([256]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block4.res7.conv2.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.conv.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res0.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res1.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res2.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.bn.weight - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv1.bn.bias - torch.Size([512]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.bn.weight - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

backbone.conv_res_block5.res3.conv2.bn.bias - torch.Size([1024]): 
PretrainedInit: load from open-mmlab://darknet53 

neck.detect1.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv2.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv2.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv2.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv3.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv3.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv3.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv4.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv4.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv4.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv5.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect1.conv5.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect1.conv5.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv1.conv.weight - torch.Size([256, 768, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv1.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv1.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv2.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv2.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv2.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv3.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv3.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv3.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv4.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv4.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv4.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv5.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect2.conv5.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect2.conv5.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv2.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.conv2.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.conv2.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv1.conv.weight - torch.Size([128, 384, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv1.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv1.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv2.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv3.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv3.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv3.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv4.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv4.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv4.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv5.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

neck.detect3.conv5.bn.weight - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

neck.detect3.conv5.bn.bias - torch.Size([128]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.0.conv.weight - torch.Size([1024, 512, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.0.bn.weight - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.0.bn.bias - torch.Size([1024]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.1.conv.weight - torch.Size([512, 256, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.1.bn.weight - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.1.bn.bias - torch.Size([512]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.2.conv.weight - torch.Size([256, 128, 3, 3]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_bridge.2.bn.weight - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_bridge.2.bn.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of YOLOV3  

bbox_head.convs_pred.0.weight - torch.Size([42, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.0.bias - torch.Size([42]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.1.weight - torch.Size([42, 512, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.1.bias - torch.Size([42]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.2.weight - torch.Size([42, 256, 1, 1]): 
Initialized by user-defined `init_weights` in YOLOV3Head  

bbox_head.convs_pred.2.bias - torch.Size([42]): 
Initialized by user-defined `init_weights` in YOLOV3Head  
2021-11-30 03:53:53,464 - mmdet - INFO - load checkpoint from local path: work_dir/epoch_250.pth
2021-11-30 03:53:53,709 - mmdet - INFO - resumed epoch 250, iter 15000
2021-11-30 03:53:53,710 - mmdet - INFO - Start running, host: r10942155@rtx3090, work_dir: /home/r10942155/mmdetection/work_dir
2021-11-30 03:53:53,710 - mmdet - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) StepLrUpdaterHook                  
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_train_iter:
(VERY_HIGH   ) StepLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) OptimizerHook                      
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) EvalHook                           
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_epoch:
(NORMAL      ) NumClassCheckHook                  
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
 -------------------- 
2021-11-30 03:53:53,711 - mmdet - INFO - workflow: [('train', 1)], max: 273 epochs
2021-11-30 03:53:53,711 - mmdet - INFO - Checkpoints will be saved to /home/r10942155/mmdetection/work_dir by HardDiskBackend.
2021-11-30 03:54:16,233 - mmdet - INFO - Epoch [251][50/60]	lr: 1.250e-06, eta: 0:09:58, time: 0.450, data_time: 0.084, memory: 6937, loss_cls: 12.8011, loss_conf: 40.8800, loss_xy: 47.8161, loss_wh: 2.3433, loss: 103.8406, grad_norm: 1700.1917
2021-11-30 03:54:21,272 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:54:21,464 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.279
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.523
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.301
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.272
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.348

2021-11-30 03:54:21,466 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:54:21,466 - mmdet - INFO - Epoch(val) [251][60]	bbox_mAP: 0.2790, bbox_mAP_50: 0.5230, bbox_mAP_75: 0.3010, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2720, bbox_mAP_copypaste: 0.279 0.523 0.301 -1.000 0.217 0.272
2021-11-30 03:54:44,308 - mmdet - INFO - Epoch [252][50/60]	lr: 1.250e-06, eta: 0:08:43, time: 0.457, data_time: 0.090, memory: 6937, loss_cls: 9.4593, loss_conf: 36.7847, loss_xy: 51.0913, loss_wh: 1.8037, loss: 99.1389, grad_norm: 1599.2345
2021-11-30 03:54:49,250 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:54:49,374 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.281
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.519
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.306
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.223
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.275
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.263
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.349

2021-11-30 03:54:49,376 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:54:49,377 - mmdet - INFO - Epoch(val) [252][60]	bbox_mAP: 0.2810, bbox_mAP_50: 0.5190, bbox_mAP_75: 0.3060, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2230, bbox_mAP_l: 0.2750, bbox_mAP_copypaste: 0.281 0.519 0.306 -1.000 0.223 0.275
2021-11-30 03:55:11,416 - mmdet - INFO - Epoch [253][50/60]	lr: 1.250e-06, eta: 0:07:59, time: 0.441, data_time: 0.071, memory: 6937, loss_cls: 11.3717, loss_conf: 38.4691, loss_xy: 49.7667, loss_wh: 1.8922, loss: 101.4997, grad_norm: 1647.4434
2021-11-30 03:55:16,489 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:55:16,615 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.277
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.520
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.315
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.271
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.350

2021-11-30 03:55:16,617 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:55:16,617 - mmdet - INFO - Epoch(val) [253][60]	bbox_mAP: 0.2770, bbox_mAP_50: 0.5200, bbox_mAP_75: 0.3150, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2710, bbox_mAP_copypaste: 0.277 0.520 0.315 -1.000 0.217 0.271
2021-11-30 03:55:39,527 - mmdet - INFO - Epoch [254][50/60]	lr: 1.250e-06, eta: 0:07:31, time: 0.458, data_time: 0.092, memory: 6937, loss_cls: 13.3531, loss_conf: 40.7338, loss_xy: 49.6732, loss_wh: 2.0607, loss: 105.8208, grad_norm: 1669.2073
2021-11-30 03:55:44,611 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:55:44,742 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.280
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.523
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.314
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.272
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.349

2021-11-30 03:55:44,744 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:55:44,745 - mmdet - INFO - Epoch(val) [254][60]	bbox_mAP: 0.2800, bbox_mAP_50: 0.5230, bbox_mAP_75: 0.3140, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2720, bbox_mAP_copypaste: 0.280 0.523 0.314 -1.000 0.217 0.272
2021-11-30 03:56:07,836 - mmdet - INFO - Epoch [255][50/60]	lr: 1.250e-06, eta: 0:07:06, time: 0.462, data_time: 0.080, memory: 6937, loss_cls: 11.9493, loss_conf: 39.5878, loss_xy: 49.4307, loss_wh: 2.1050, loss: 103.0728, grad_norm: 1655.1532
2021-11-30 03:56:12,759 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:56:12,888 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.279
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.521
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.305
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.208
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.271
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.347

2021-11-30 03:56:12,890 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:56:12,890 - mmdet - INFO - Epoch(val) [255][60]	bbox_mAP: 0.2790, bbox_mAP_50: 0.5210, bbox_mAP_75: 0.3050, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2080, bbox_mAP_l: 0.2710, bbox_mAP_copypaste: 0.279 0.521 0.305 -1.000 0.208 0.271
2021-11-30 03:56:35,198 - mmdet - INFO - Epoch [256][50/60]	lr: 1.250e-06, eta: 0:06:39, time: 0.446, data_time: 0.080, memory: 6937, loss_cls: 11.6278, loss_conf: 39.0458, loss_xy: 48.8400, loss_wh: 1.8052, loss: 101.3187, grad_norm: 1651.5083
2021-11-30 03:56:40,444 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:56:40,575 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.282
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.525
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.309
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.274
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.358
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.348

2021-11-30 03:56:40,577 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:56:40,577 - mmdet - INFO - Epoch(val) [256][60]	bbox_mAP: 0.2820, bbox_mAP_50: 0.5250, bbox_mAP_75: 0.3090, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2740, bbox_mAP_copypaste: 0.282 0.525 0.309 -1.000 0.217 0.274
2021-11-30 03:57:03,065 - mmdet - INFO - Epoch [257][50/60]	lr: 1.250e-06, eta: 0:06:14, time: 0.450, data_time: 0.081, memory: 6937, loss_cls: 11.5094, loss_conf: 40.7908, loss_xy: 48.1272, loss_wh: 2.0681, loss: 102.4955, grad_norm: 1643.8675
2021-11-30 03:57:08,293 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:57:08,418 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.280
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.518
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.317
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.273
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.361
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.361
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.361
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.350

2021-11-30 03:57:08,420 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:57:08,420 - mmdet - INFO - Epoch(val) [257][60]	bbox_mAP: 0.2800, bbox_mAP_50: 0.5180, bbox_mAP_75: 0.3170, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2730, bbox_mAP_copypaste: 0.280 0.518 0.317 -1.000 0.217 0.273
2021-11-30 03:57:31,033 - mmdet - INFO - Epoch [258][50/60]	lr: 1.250e-06, eta: 0:05:49, time: 0.452, data_time: 0.096, memory: 6937, loss_cls: 10.2595, loss_conf: 35.6213, loss_xy: 47.3513, loss_wh: 2.0192, loss: 95.2514, grad_norm: 1593.7778
2021-11-30 03:57:35,949 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:57:36,078 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.283
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.524
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.309
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.275
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.360

2021-11-30 03:57:36,081 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:57:36,081 - mmdet - INFO - Epoch(val) [258][60]	bbox_mAP: 0.2830, bbox_mAP_50: 0.5240, bbox_mAP_75: 0.3090, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2750, bbox_mAP_copypaste: 0.283 0.524 0.309 -1.000 0.217 0.275
2021-11-30 03:57:58,521 - mmdet - INFO - Epoch [259][50/60]	lr: 1.250e-06, eta: 0:05:25, time: 0.449, data_time: 0.079, memory: 6937, loss_cls: 11.8958, loss_conf: 43.8805, loss_xy: 48.6338, loss_wh: 2.0563, loss: 106.4664, grad_norm: 1753.6965
2021-11-30 03:58:03,455 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:58:03,647 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.281
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.523
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.312
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.274
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.361
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.361
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.361
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.351

2021-11-30 03:58:03,650 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:58:03,650 - mmdet - INFO - Epoch(val) [259][60]	bbox_mAP: 0.2810, bbox_mAP_50: 0.5230, bbox_mAP_75: 0.3120, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2740, bbox_mAP_copypaste: 0.281 0.523 0.312 -1.000 0.217 0.274
2021-11-30 03:58:26,033 - mmdet - INFO - Epoch [260][50/60]	lr: 1.250e-06, eta: 0:05:02, time: 0.448, data_time: 0.082, memory: 6937, loss_cls: 11.5187, loss_conf: 40.3851, loss_xy: 49.1981, loss_wh: 1.9705, loss: 103.0724, grad_norm: 1618.3398
2021-11-30 03:58:31,039 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:58:31,170 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.284
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.520
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.314
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.277
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.356

2021-11-30 03:58:31,173 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:58:31,173 - mmdet - INFO - Epoch(val) [260][60]	bbox_mAP: 0.2840, bbox_mAP_50: 0.5200, bbox_mAP_75: 0.3140, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2770, bbox_mAP_copypaste: 0.284 0.520 0.314 -1.000 0.217 0.277
2021-11-30 03:58:53,623 - mmdet - INFO - Epoch [261][50/60]	lr: 1.250e-06, eta: 0:04:38, time: 0.449, data_time: 0.073, memory: 6937, loss_cls: 11.7978, loss_conf: 41.2682, loss_xy: 50.3136, loss_wh: 1.9668, loss: 105.3465, grad_norm: 1736.7498
2021-11-30 03:58:58,660 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:58:58,790 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.284
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.521
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.313
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.277
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.355

2021-11-30 03:58:58,792 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:58:58,793 - mmdet - INFO - Epoch(val) [261][60]	bbox_mAP: 0.2840, bbox_mAP_50: 0.5210, bbox_mAP_75: 0.3130, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2770, bbox_mAP_copypaste: 0.284 0.521 0.313 -1.000 0.217 0.277
2021-11-30 03:59:21,462 - mmdet - INFO - Epoch [262][50/60]	lr: 1.250e-06, eta: 0:04:15, time: 0.453, data_time: 0.081, memory: 6937, loss_cls: 10.5059, loss_conf: 33.6627, loss_xy: 49.1548, loss_wh: 1.7780, loss: 95.1013, grad_norm: 1522.1413
2021-11-30 03:59:26,520 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:59:26,653 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.284
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.527
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.283
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.200
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.278
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.370
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.370
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.370
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.242
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.364

2021-11-30 03:59:26,655 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:59:26,655 - mmdet - INFO - Epoch(val) [262][60]	bbox_mAP: 0.2840, bbox_mAP_50: 0.5270, bbox_mAP_75: 0.2830, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2000, bbox_mAP_l: 0.2780, bbox_mAP_copypaste: 0.284 0.527 0.283 -1.000 0.200 0.278
2021-11-30 03:59:49,019 - mmdet - INFO - Epoch [263][50/60]	lr: 1.250e-06, eta: 0:03:52, time: 0.447, data_time: 0.079, memory: 6937, loss_cls: 12.0490, loss_conf: 39.5520, loss_xy: 47.8761, loss_wh: 1.8910, loss: 101.3682, grad_norm: 1619.1081
2021-11-30 03:59:54,095 - mmdet - INFO - Evaluating bbox...
2021-11-30 03:59:54,223 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.282
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.517
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.310
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.208
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.277
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.242
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.354

2021-11-30 03:59:54,225 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 03:59:54,225 - mmdet - INFO - Epoch(val) [263][60]	bbox_mAP: 0.2820, bbox_mAP_50: 0.5170, bbox_mAP_75: 0.3100, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2080, bbox_mAP_l: 0.2770, bbox_mAP_copypaste: 0.282 0.517 0.310 -1.000 0.208 0.277
2021-11-30 04:00:17,218 - mmdet - INFO - Epoch [264][50/60]	lr: 1.250e-06, eta: 0:03:29, time: 0.460, data_time: 0.080, memory: 6937, loss_cls: 10.2613, loss_conf: 36.6956, loss_xy: 46.0102, loss_wh: 1.9424, loss: 94.9095, grad_norm: 1522.5349
2021-11-30 04:00:22,262 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:00:22,388 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.288
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.525
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.306
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.281
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.356

2021-11-30 04:00:22,390 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:00:22,390 - mmdet - INFO - Epoch(val) [264][60]	bbox_mAP: 0.2880, bbox_mAP_50: 0.5250, bbox_mAP_75: 0.3060, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2810, bbox_mAP_copypaste: 0.288 0.525 0.306 -1.000 0.217 0.281
2021-11-30 04:00:45,616 - mmdet - INFO - Epoch [265][50/60]	lr: 1.250e-06, eta: 0:03:06, time: 0.464, data_time: 0.092, memory: 6937, loss_cls: 10.2451, loss_conf: 38.7328, loss_xy: 48.2324, loss_wh: 1.8152, loss: 99.0254, grad_norm: 1652.4228
2021-11-30 04:00:50,798 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:00:50,926 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.282
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.526
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.294
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.215
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.276
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.360
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.254
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.351

2021-11-30 04:00:50,929 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:00:50,929 - mmdet - INFO - Epoch(val) [265][60]	bbox_mAP: 0.2820, bbox_mAP_50: 0.5260, bbox_mAP_75: 0.2940, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2150, bbox_mAP_l: 0.2760, bbox_mAP_copypaste: 0.282 0.526 0.294 -1.000 0.215 0.276
2021-11-30 04:01:13,249 - mmdet - INFO - Epoch [266][50/60]	lr: 1.250e-06, eta: 0:02:43, time: 0.446, data_time: 0.080, memory: 6937, loss_cls: 10.3795, loss_conf: 38.2605, loss_xy: 48.5963, loss_wh: 2.0359, loss: 99.2722, grad_norm: 1558.2824
2021-11-30 04:01:18,322 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:01:18,451 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.287
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.523
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.308
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.223
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.279
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.369
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.369
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.369
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.263
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.358

2021-11-30 04:01:18,453 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:01:18,453 - mmdet - INFO - Epoch(val) [266][60]	bbox_mAP: 0.2870, bbox_mAP_50: 0.5230, bbox_mAP_75: 0.3080, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2230, bbox_mAP_l: 0.2790, bbox_mAP_copypaste: 0.287 0.523 0.308 -1.000 0.223 0.279
2021-11-30 04:01:41,027 - mmdet - INFO - Epoch [267][50/60]	lr: 1.250e-06, eta: 0:02:20, time: 0.451, data_time: 0.074, memory: 6937, loss_cls: 12.5057, loss_conf: 40.5810, loss_xy: 51.4160, loss_wh: 2.0000, loss: 106.5028, grad_norm: 1691.3405
2021-11-30 04:01:45,981 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:01:46,107 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.285
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.523
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.328
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.208
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.279
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.242
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.354

2021-11-30 04:01:46,110 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:01:46,110 - mmdet - INFO - Epoch(val) [267][60]	bbox_mAP: 0.2850, bbox_mAP_50: 0.5230, bbox_mAP_75: 0.3280, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2080, bbox_mAP_l: 0.2790, bbox_mAP_copypaste: 0.285 0.523 0.328 -1.000 0.208 0.279
2021-11-30 04:02:07,982 - mmdet - INFO - Epoch [268][50/60]	lr: 1.250e-06, eta: 0:01:57, time: 0.437, data_time: 0.069, memory: 6937, loss_cls: 12.1680, loss_conf: 39.5182, loss_xy: 49.7993, loss_wh: 2.0014, loss: 103.4869, grad_norm: 1573.6357
2021-11-30 04:02:13,203 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:02:13,331 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.287
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.525
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.306
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.223
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.279
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.263
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.354

2021-11-30 04:02:13,333 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:02:13,334 - mmdet - INFO - Epoch(val) [268][60]	bbox_mAP: 0.2870, bbox_mAP_50: 0.5250, bbox_mAP_75: 0.3060, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2230, bbox_mAP_l: 0.2790, bbox_mAP_copypaste: 0.287 0.525 0.306 -1.000 0.223 0.279
2021-11-30 04:02:35,747 - mmdet - INFO - Epoch [269][50/60]	lr: 1.250e-06, eta: 0:01:34, time: 0.448, data_time: 0.074, memory: 6937, loss_cls: 11.7677, loss_conf: 38.4742, loss_xy: 47.6318, loss_wh: 2.1930, loss: 100.0667, grad_norm: 1535.0852
2021-11-30 04:02:40,831 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:02:41,025 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.282
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.520
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.290
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.215
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.274
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.366
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.366
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.366
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.254
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.360

2021-11-30 04:02:41,028 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:02:41,028 - mmdet - INFO - Epoch(val) [269][60]	bbox_mAP: 0.2820, bbox_mAP_50: 0.5200, bbox_mAP_75: 0.2900, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2150, bbox_mAP_l: 0.2740, bbox_mAP_copypaste: 0.282 0.520 0.290 -1.000 0.215 0.274
2021-11-30 04:03:04,054 - mmdet - INFO - Epoch [270][50/60]	lr: 1.250e-06, eta: 0:01:12, time: 0.460, data_time: 0.084, memory: 6937, loss_cls: 11.4882, loss_conf: 39.2849, loss_xy: 48.8136, loss_wh: 2.1635, loss: 101.7501, grad_norm: 1636.1164
2021-11-30 04:03:09,025 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:03:09,152 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.284
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.522
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.304
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.200
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.278
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.365
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.242
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.356

2021-11-30 04:03:09,154 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:03:09,154 - mmdet - INFO - Epoch(val) [270][60]	bbox_mAP: 0.2840, bbox_mAP_50: 0.5220, bbox_mAP_75: 0.3040, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2000, bbox_mAP_l: 0.2780, bbox_mAP_copypaste: 0.284 0.522 0.304 -1.000 0.200 0.278
2021-11-30 04:03:32,035 - mmdet - INFO - Epoch [271][50/60]	lr: 1.250e-06, eta: 0:00:49, time: 0.457, data_time: 0.087, memory: 6937, loss_cls: 10.1114, loss_conf: 35.4710, loss_xy: 46.6383, loss_wh: 1.7247, loss: 93.9454, grad_norm: 1525.8219
2021-11-30 04:03:36,816 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:03:36,941 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.280
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.515
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.313
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.223
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.275
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.363
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.263
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.352

2021-11-30 04:03:36,943 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:03:36,943 - mmdet - INFO - Epoch(val) [271][60]	bbox_mAP: 0.2800, bbox_mAP_50: 0.5150, bbox_mAP_75: 0.3130, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2230, bbox_mAP_l: 0.2750, bbox_mAP_copypaste: 0.280 0.515 0.313 -1.000 0.223 0.275
2021-11-30 04:03:59,617 - mmdet - INFO - Epoch [272][50/60]	lr: 1.250e-06, eta: 0:00:26, time: 0.453, data_time: 0.079, memory: 6937, loss_cls: 9.7513, loss_conf: 34.7878, loss_xy: 47.9607, loss_wh: 1.6876, loss: 94.1874, grad_norm: 1581.6313
2021-11-30 04:04:04,612 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:04:04,745 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.279
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.527
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.314
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.200
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.273
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.368
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.368
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.368
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.242
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.363

2021-11-30 04:04:04,747 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:04:04,747 - mmdet - INFO - Epoch(val) [272][60]	bbox_mAP: 0.2790, bbox_mAP_50: 0.5270, bbox_mAP_75: 0.3140, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2000, bbox_mAP_l: 0.2730, bbox_mAP_copypaste: 0.279 0.527 0.314 -1.000 0.200 0.273
2021-11-30 04:04:27,254 - mmdet - INFO - Epoch [273][50/60]	lr: 1.250e-06, eta: 0:00:03, time: 0.450, data_time: 0.080, memory: 6937, loss_cls: 12.3376, loss_conf: 41.2316, loss_xy: 50.1167, loss_wh: 2.1000, loss: 105.7859, grad_norm: 1607.3270
2021-11-30 04:04:30,557 - mmdet - INFO - Saving checkpoint at 273 epochs
2021-11-30 04:04:33,135 - mmdet - INFO - Evaluating bbox...
2021-11-30 04:04:33,262 - mmdet - INFO - 
Average Precision  (AP) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.285
Average Precision  (AP) @[ IoU=0.50      | area=   all | maxDets=1000 ] = 0.523
Average Precision  (AP) @[ IoU=0.75      | area=   all | maxDets=1000 ] = 0.307
Average Precision  (AP) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Precision  (AP) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.217
Average Precision  (AP) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.278
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=300 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=1000 ] = 0.367
Average Recall     (AR) @[ IoU=0.50:0.95 | area= small | maxDets=1000 ] = -1.000
Average Recall     (AR) @[ IoU=0.50:0.95 | area=medium | maxDets=1000 ] = 0.250
Average Recall     (AR) @[ IoU=0.50:0.95 | area= large | maxDets=1000 ] = 0.357

2021-11-30 04:04:33,264 - mmdet - INFO - Exp name: yolov3_d53_mstrain-608_273e_coco.py
2021-11-30 04:04:33,265 - mmdet - INFO - Epoch(val) [273][60]	bbox_mAP: 0.2850, bbox_mAP_50: 0.5230, bbox_mAP_75: 0.3070, bbox_mAP_s: -1.0000, bbox_mAP_m: 0.2170, bbox_mAP_l: 0.2780, bbox_mAP_copypaste: 0.285 0.523 0.307 -1.000 0.217 0.278
